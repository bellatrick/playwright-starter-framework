name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  run-tests:
    name: Run Playwright Tests (Node ${{ matrix.node-version }})
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Check if browsers are installed (Debugging)
        run: ls -la ~/.cache/ms-playwright

      - name: Run Smoke Tests (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: npm run test:smoke

        env:
          CI: true

      - name: Run Regression Tests (Push to master or manual dispatch)
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        run: npm run test:regression

        env:
          CI: true

      - name: Upload Playwright HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-node${{ matrix.node-version }}-${{runner.os}}
          path: playwright-report/
          retention-days: 7
